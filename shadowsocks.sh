#!/bin/sh
# GPL
# by ZMOM1031

# apt-get install python python-pip
# yum install python python-setuptools && easy_install pip

py=$(type python 2> /dev/null | awk '{print $1}')
pip=$(type pip 2> /dev/null | awk '{print $1}')
debian_info=$(cat /etc/*rele* | grep 'PRETTY_NAME' | grep 'jessie' | awk '{print $1}')

f_install(){
pip install shadowsocks

if [ -d /etc/shadowsocks ];
then
        echo "Create a profile"
else
        mkdir /etc/shadowsocks
fi

ip=$(ip addr show | grep '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | grep -v 127.* | awk '{print $2}' | cut -d '/' -f 1 | head -n 1)
password=$(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c 16; echo)
port="8388"
method="aes-256-cfb"

cat << EOF > /etc/shadowsocks/server.json
{
    "server":"0.0.0.0",
    "server_port":$port,
    "local_address": "127.0.0.1",
    "local_port":1080,
    "password":"$password",
    "timeout":300,
    "method":"$method",
    "fast_open": false
}
EOF

echo -e "\
Server IP: \033[40;31m$ip\033[0m Port: \033[40;31m$port\033[0m\033[0m\n\
Password: \033[40;31m$password\033[0m\033[0m\n\
Method: \033[40;31m$method\033[0m\033[0m" | \
tee Shadowsocks.log

cat << EOF > /etc/shadowsocks/proxy.json
{
    "server":"You Proxy IP",
    "server_port":8388,
    "local_address": "127.0.0.1",
    "local_port":1080,
    "password":"You Password",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false
}
EOF

f_systemv(){
cat << EOF > /etc/init.d/ssserver
#!/bin/sh
### BEGIN INIT INFO
# Provides:          Shadowsocks
# Required-Start:    \$remote_fs \$network
# Required-Stop:     \$remote_fs \$network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Shadowsocks Server
### END INIT INFO

case "\$1" in
        start)
        echo "Starting Shadowsocks"
        ssserver -c /etc/shadowsocks/server.json -d start
        ;;
        stop)
        echo "Shutting down Shadowsocks"
        ssserver -d stop
        ;;
        restart)
        ssserver -d stop
        ssserver -c /etc/shadowsocks/server.json -d start
        ;;
        *)
        echo "Usage: /etc/init.d/ssserver {start|stop|restart}"
        exit 1
        ;;
esac
exit
EOF
chmod a+x /etc/init.d/ssserver
cat << EOF > /etc/init.d/sslocal
#!/bin/sh
### BEGIN INIT INFO
# Provides:          Shadowsocks
# Required-Start:    \$remote_fs \$network
# Required-Stop:     \$remote_fs \$network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Shadowsocks Proxy
### END INIT INFO

case "\$1" in
        start)
        echo "Starting Shadowsocks"
        sslocal -c /etc/shadowsocks/proxy.json -d start
        ;;
        stop)
        echo "Shutting down Shadowsocks"
        ssserver -d stop
        ;;
        restart)
        ssserver -d stop
        sslocal -c /etc/shadowsocks/proxy.json -d start
        ;;
        *)
        echo "Usage: /etc/init.d/sslocal {start|stop|restart}"
        exit 1
        ;;
esac
exit
EOF
chmod a+x /etc/init.d/sslocal
}

f_systemd(){
cat << EOF > /usr/lib/systemd/system/ssserver.service
[Unit]
Description=Shadowsocks Proxy Server
After=network.target auditd.service

[Service]
Type=simple
ExecStart=/usr/local/bin/ssserver -c /etc/shadowsocks/server.json -d start
ExecReload=/bin/kill -HUP $MAINPID

[Install]
WantedBy=multi-user.target
EOF
cat << EOF > /usr/lib/systemd/system/sslocal.service
[Unit]
Description=Shadowsocks Proxy Server
After=network.target auditd.service

[Service]
Type=simple
ExecStart=/usr/local/bin/sslocal -c /etc/shadowsocks/proxy.json -d start
ExecReload=/bin/kill -HUP $MAINPID

[Install]
WantedBy=multi-user.target
EOF
}

f_debian8(){
cat << EOF > /lib/systemd/system/ssserver.service
# Automatically generated by systemd-sysv-generator

[Unit]
SourcePath=/etc/init.d/ssserver
Description=Shadowsocks Proxy Server
Before=runlevel2.target runlevel3.target runlevel4.target runlevel5.target shutdown.target
After=local-fs.target remote-fs.target network-online.target systemd-journald-dev-log.socket nss-lookup.target
Wants=network-online.target
Conflicts=shutdown.target

[Service]
Type=forking
Restart=no
TimeoutSec=5min
IgnoreSIGPIPE=no
KillMode=process
GuessMainPID=no
RemainAfterExit=yes
SysVStartPriority=2
ExecStart=/etc/init.d/ssserver start
ExecStop=/etc/init.d/ssserver stop
ExecReload=/etc/init.d/ssserver reload
EOF
cat << EOF > /lib/systemd/system/sslocal.service
# Automatically generated by systemd-sysv-generator

[Unit]
SourcePath=/etc/init.d/sslocal
Description=Shadowsocks Proxy Server
Before=runlevel2.target runlevel3.target runlevel4.target runlevel5.target shutdown.target
After=local-fs.target remote-fs.target network-online.target systemd-journald-dev-log.socket nss-lookup.target
Wants=network-online.target
Conflicts=shutdown.target

[Service]
Type=forking
Restart=no
TimeoutSec=5min
IgnoreSIGPIPE=no
KillMode=process
GuessMainPID=no
RemainAfterExit=yes
SysVStartPriority=2
ExecStart=/etc/init.d/sslocal start
ExecStop=/etc/init.d/sslocal stop
ExecReload=/etc/init.d/sslocal reload
EOF
}
if [ $debian_info ]
then
        f_systemv
        f_debian8
elif [ -f "/bin/systemd" ]
then
        f_systemd
else
        f_systemv
fi
}

if [ $py ] && [ $pip ]
then
        f_install
else
        echo 'Not install the "python" and "pip"'
		echo 'Debian: apt-get install python python-pip'
		echo 'CentOS: yum install python python-setuptools && easy_install pip'
fi

